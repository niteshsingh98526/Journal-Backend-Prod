
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE}
spring.data.mongodb.auto-index-creation=true

spring.application.name=Journal Management System
server.servlet.context-path=/
server.port=${PORT}
AnsiColor.BRIGHT_RED=red

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:4200,https://journal-backend-prod-qbom.onrender.com
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true


#key name kuchh v daal sakte hai bs yaha dala hua key name hi consider kare.
weather.api.key=${WHEATHER_API_KEY}

#Mail
spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = ${SPRING_MAIL_USERNAME}
spring.mail.password = ${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#Redis
# Option 1: Using connection string (recommended for Railway)
spring.data.redis.url=${SPRING_REDIS_URL:redis://default:swpePYInOfSStLOQhcAMCZKugrrRQiCr@shuttle.proxy.rlwy.net:18456}

# Option 2: Individual properties (fallback)
spring.data.redis.host=${SPRING_REDIS_HOST:shuttle.proxy.rlwy.net}
spring.data.redis.port=${SPRING_REDIS_PORT:18456}
spring.data.redis.password=${SPRING_REDIS_PASSWORD:swpePYInOfSStLOQhcAMCZKugrrRQiCr}
spring.data.redis.ssl.enabled=false
spring.data.redis.timeout=10000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.shutdown-timeout=100ms


#Kafka

#Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.bootstrap-servers=${SPRING_KAFKA_SERVER}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=${SPRING_KAFKA_GROUP_ID}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.journal.journalApp.model
spring.kafka.properties.sasl.jaas.config=${SPRING_KAFKA_CONFIG}
spring.kafka.properties.security.protocol=SASL_SSL

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000



